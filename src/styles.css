*,
::before,
::after {
	padding: 0;
	margin: 0;
}

html {
	font-size: 62.5%;
	/* sets default font size of webpage to 10px (62.5% of the browser default 16px) */
	/* having a rounded number like this makes using rem units easier - 2rem would be 20px */
	box-sizing: border-box;
}

body {
	font-family: 'Baskervville', serif;
	color: linen;
	background-color: rgb(20, 30, 40);
}

h1 {
	font-family: 'Anton', sans-serif;
}

h2,
h3,
h4,
h5,
h6 {
	font-family: 'Raleway', sans-serif;
}

a {
	text-decoration: none;
	color: linen;
}

/* Setting up Grid below here: */

main {
	display: grid;
	/* offers a two dimensional grid-based layout allowing for the centering of items vertically and horizontally while retaining control to do things like overlap elements */
	grid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr); /* gives the parent element a three-column layout 
	- creates 3 columns where the middle column is 94rem (940px) wide and the first and last columns are 1 fraction of the remaining space in the grid container */
	/* minmax - a function that makes the columns responsive on any device it is viewed on 
	- takes in 2 arguments - the min and the max */
	row-gap: 3rem;
	/* adds space between rows in the grid layout */
}

.heading {
	grid-column: 2/3;
	/* tells the grid item which line to start and end at 
	- starts content on line 2 and ends on line 3 */
	display: grid;
	grid-template-columns: repeat(2, 1fr);
	/* gives this class 2 columns, each with 1fr width. 
	- repeat() is a function that allows you to repeat a value rather than having to write it out manually each time */
	row-gap: 1.5rem;
}

.text {
	grid-column: 2/3;
	font-size: 1.8rem;
	letter-spacing: .6px;
	column-width: 25rem;
	/* even though .text is not a grid you can create columns within it using column-width */
	text-align: justify;
}

.hero {
	grid-column: 1/-1;
	position: relative;
}

img {
	width: 100%;
	object-fit: cover;
	/* object-fit tells the browser how to positive the element within its container
	- cover sets the img to fill the container - will crop if needed to fix aspect ratio */
}

.hero-title {
	text-align: center;
	color: orangered;
	font-size: 8rem;
}

.hero-subtitle {
	font-size: 2.4rem;
	color: orangered;
	text-align: center;
}

.author {
	font-size: 2rem;
	font-family: 'Raleway', sans-serif;
}

.author-name a:hover {
	background-color: #306203;
	/* changes the background color of the author-name class when someone hovers over it */
}

.publish-date {
	color: rgba(255, 255, 255, .5);
}

.social-icons {
	display: grid;
	font-size: 3rem;
	grid-template-columns: repeat(5, 1fr);
	/* creates 5 columns in grid each 1 fraction of the container */
	grid-auto-flow: column;
	/* makes it so that if an addition element is added to this class a new column is added to keep the layout consistent */
	/* grid-auto-flow takes in either row or colum as it's value and an optional second value of dense.  */
	grid-auto-columns: 1fr;
	/* sets the columns that are added automatically to be the same size as the rest */
	align-items: center;
	/* centers the child elements on the column axis, can also use justify-items to align the child elements along the row axis */
}

.first-paragraph::first-letter {
	font-size: 6rem;
	color: orangered;
	float: left;
	margin-right: 1rem;
}

hr {
	margin: 1.5rem 0;
	border: 1px solid rgba(120, 120, 120, .6);
}

.quote {
	color: #00beef;
	font-size: 2.4rem;
	text-align: center;
	font-family: 'Raleway', sans-serif;
}

.quote::before {
	content: '" ';
}

.quote::after {
	content: ' "';
}

.text-with-images {
	display: grid;
	grid-template-columns: 1fr 2fr;
	column-gap: 3rem;
}
